[{"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\index.js":"1","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\App.js":"2","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\header.js":"4","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\footer.js":"5","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\HomeScreen.js":"6","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\products.js":"7","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProductScreen.js":"10","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\store.js":"11","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\productReducers.js":"12","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\productAction.js":"13","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\loader.js":"14","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\message.js":"15","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\productConstants.js":"16","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\CartScreen.js":"17","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\cartReducer.js":"18","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\cartConstants.js":"19","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\cartAction.js":"20","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\userReducer.js":"21","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\userConstants.js":"22","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\LoginScreen.js":"23","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\userAction.js":"24","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\formContainer.js":"25","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\testing.js":"26","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\RegisterScreen.js":"27","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProfileScreen.js":"28","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ShippingScreen.js":"29","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\checkOutComponent.js":"30","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\PaymentScreen.js":"31","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"32","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\orderConstants.js":"33","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\orderAction.js":"34","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\orderReducers.js":"35","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\OrderScreen.js":"36","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\UserListScreen.js":"37","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\UserEditScreen.js":"38","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProductListScreen.js":"39","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProductEditScreen.js":"40","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\OrderListScreen.js":"41","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\searchBox.js":"42","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\Paginate.js":"43","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\ProductCarousel.js":"44","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\MetaTags.js":"45"},{"size":662,"mtime":1643572928228,"results":"46","hashOfConfig":"47"},{"size":2803,"mtime":1643561480922,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1641202985503,"results":"49","hashOfConfig":"47"},{"size":2656,"mtime":1643589388388,"results":"50","hashOfConfig":"47"},{"size":1905,"mtime":1643638211792,"results":"51","hashOfConfig":"47"},{"size":1635,"mtime":1643575586254,"results":"52","hashOfConfig":"47"},{"size":2726,"mtime":1641242666914,"results":"53","hashOfConfig":"47"},{"size":957,"mtime":1643469973223,"results":"54","hashOfConfig":"47"},{"size":1598,"mtime":1643588778411,"results":"55","hashOfConfig":"47"},{"size":6839,"mtime":1643589361598,"results":"56","hashOfConfig":"47"},{"size":2517,"mtime":1643559684108,"results":"57","hashOfConfig":"47"},{"size":3776,"mtime":1643559613767,"results":"58","hashOfConfig":"47"},{"size":4605,"mtime":1643562056173,"results":"59","hashOfConfig":"47"},{"size":339,"mtime":1641591394036,"results":"60","hashOfConfig":"47"},{"size":282,"mtime":1641591639709,"results":"61","hashOfConfig":"47"},{"size":1534,"mtime":1643559432415,"results":"62","hashOfConfig":"47"},{"size":3949,"mtime":1643293768375,"results":"63","hashOfConfig":"47"},{"size":1323,"mtime":1642934150866,"results":"64","hashOfConfig":"47"},{"size":236,"mtime":1642804792159,"results":"65","hashOfConfig":"47"},{"size":1335,"mtime":1642970405094,"results":"66","hashOfConfig":"47"},{"size":3587,"mtime":1643371988326,"results":"67","hashOfConfig":"47"},{"size":1506,"mtime":1643368139178,"results":"68","hashOfConfig":"47"},{"size":2201,"mtime":1642850327086,"results":"69","hashOfConfig":"47"},{"size":6323,"mtime":1643369353388,"results":"70","hashOfConfig":"47"},{"size":363,"mtime":1642705405969,"results":"71","hashOfConfig":"47"},{"size":160,"mtime":1642704756090,"results":"72","hashOfConfig":"47"},{"size":3106,"mtime":1643572487063,"results":"73","hashOfConfig":"47"},{"size":5338,"mtime":1643572119805,"results":"74","hashOfConfig":"47"},{"size":2372,"mtime":1643294283153,"results":"75","hashOfConfig":"47"},{"size":1304,"mtime":1642802867679,"results":"76","hashOfConfig":"47"},{"size":1899,"mtime":1643318692007,"results":"77","hashOfConfig":"47"},{"size":5207,"mtime":1643293864854,"results":"78","hashOfConfig":"47"},{"size":1193,"mtime":1643486485044,"results":"79","hashOfConfig":"47"},{"size":5047,"mtime":1643489318329,"results":"80","hashOfConfig":"47"},{"size":3098,"mtime":1643486618563,"results":"81","hashOfConfig":"47"},{"size":9696,"mtime":1643592888547,"results":"82","hashOfConfig":"47"},{"size":2900,"mtime":1643573030949,"results":"83","hashOfConfig":"47"},{"size":3107,"mtime":1643371669689,"results":"84","hashOfConfig":"47"},{"size":4042,"mtime":1643555416619,"results":"85","hashOfConfig":"47"},{"size":5667,"mtime":1643543811399,"results":"86","hashOfConfig":"47"},{"size":2687,"mtime":1643489800278,"results":"87","hashOfConfig":"47"},{"size":892,"mtime":1643570235873,"results":"88","hashOfConfig":"47"},{"size":610,"mtime":1643555610958,"results":"89","hashOfConfig":"47"},{"size":1318,"mtime":1643569530244,"results":"90","hashOfConfig":"47"},{"size":437,"mtime":1643575411183,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cjoyt",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\index.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\App.js",["193"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ProductCarousel from './components/ProductCarousel';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport { Container } from \"react-bootstrap\";\nimport {BrowserRouter as Router,Route,Routes} from 'react-router-dom'\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductScreen from './Screens/ProductScreen';\nimport CartScreen from './Screens/CartScreen'\nimport LoginScreen from './Screens/LoginScreen'\nimport RegisterScreen from './Screens/RegisterScreen'\nimport ProfileScreen from './Screens/ProfileScreen'\nimport ShippingScreen from './Screens/ShippingScreen';\nimport PaymentScreen from './Screens/PaymentScreen';\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen';\nimport OrderScreen from './Screens/OrderScreen';\nimport UserListScreen from './Screens/UserListScreen';\nimport UserEditScreen from './Screens/UserEditScreen';\nimport ProductListScreen from './Screens/ProductListScreen';\nimport ProductEditScreen from './Screens/ProductEditScreen';\nimport OrderListScreen from './Screens/OrderListScreen';\n\nfunction App() {\n\n  return (\n    <Router>\n      \n      \n       <Header/>\n       \n       <Container>\n       \n       <Routes>\n         \n       <Route exact path='/' element={<HomeScreen/>} />\n       <Route path='/product/:id' element={<ProductScreen/>} />\n       <Route path='/cart/:id' element={<CartScreen/>} />\n       <Route path='/cart' element={<CartScreen/>} />\n       <Route path='/login' element={<LoginScreen/>} />      {/* optional /cart/:id? */}\n       <Route path='/register' element={<RegisterScreen/>} />\n       <Route path='/profile' element={<ProfileScreen/>} />\n       <Route path='/shipping' element={<ShippingScreen/>} />\n       <Route path='/payment' element={<PaymentScreen/>} />\n       <Route path='/placeorder' element={<PlaceOrderScreen/>} />\n       <Route path='/order/:id' element={<OrderScreen/>} />\n       <Route path='/admin/userlist' element={<UserListScreen/>} />\n       <Route path='/admin/users/:id/edit' element={<UserEditScreen/>} />\n       <Route path='/admin/productlist' element={<ProductListScreen/>} />\n       <Route path='/admin/products/:id/edit' element={<ProductEditScreen/>}/>\n       <Route path='/admin/orderlist' element={<OrderListScreen/>} />\n       <Route path='/admin/orders/:id' element={<OrderScreen/>}/>\n       <Route path='/search/:keyword' element={<HomeScreen/>} />\n       <Route path='/search/:keyword/page/:pageNumber' element={<HomeScreen/>} />\n       <Route path='/page/:pageNumber' element={<HomeScreen/>} />\n       <Route path='/admin/productlist/:pageNumber' element={<ProductListScreen/>} />\n\n\n\n       </Routes>\n       </Container>\n       <Footer/> \n      \n       \n    </Router>\n  ); \n}\n\nexport default App;\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\reportWebVitals.js",[],["194","195"],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\header.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\footer.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\products.js",[],["196","197"],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProductScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\store.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\productReducers.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\productAction.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\loader.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\message.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\productConstants.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\CartScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\cartReducer.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\cartConstants.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\cartAction.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\userReducer.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\userConstants.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\LoginScreen.js",["198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { Col, Row,Form ,Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {  useLocation, useNavigate } from \"react-router\";\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n  \r\n   const navigate=useNavigate()\r\n  const location=useLocation()\r\n  const redirect=location.search?location.search.split('=')[1]:''\r\n  \r\n\r\n  const userLogin=useSelector(state=>state.userLogin)\r\n  const {loading,userInfo,error}=userLogin\r\n  useEffect(()=>{\r\n      if(userInfo){\r\n          navigate(`/${redirect}`)\r\n      }\r\n  },[navigate,userInfo,redirect])\r\n  \r\n  const dispatch=useDispatch()\r\n  const submitHandler=(e)=>{ \r\n    e.preventDefault()\r\n      dispatch(login(email,password))\r\n          \r\n    }\r\n    \r\n  return (\r\n    <>\r\n   \r\n   <FormContainer>\r\n        <h1>SIGN IN </h1>\r\n        {(error) && <Message variant='danger'>{error}</Message>}\r\n        {/* {loading && <Loader/>} */}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group  controlId=\"email\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>(setEmail(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>(setPassword(e.target.value))} />\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"dark\" type=\"submit\">\r\n          SIGN IN\r\n        </Button>\r\n      </Form>\r\n       <Row className=\"py-3\">\r\n           <Col>\r\n            New Customer ?{''}<Link to={redirect?`/register?redirect=${redirect}`:`/register`}>Register</Link>\r\n           </Col>\r\n       </Row>\r\n    </FormContainer>\r\n    \r\n   </>\r\n   \r\n  )\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\userAction.js",["200","201"],"import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../Constants/userConstants\";\r\nimport { MY_ORDER_LIST_RESET } from \"../Constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/Api/users/login\", { email, password },config); // config is not working\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({\r\n    type: USER_DETAILS_RESET,\r\n  });\r\n  dispatch({\r\n    type: MY_ORDER_LIST_RESET,\r\n  });\r\n  dispatch({\r\n    type: USER_LIST_RESET,\r\n  });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/Api/users\", { name, email, password }); // config is not working\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        // 'Content-type':'application/json',    //this is not working properly\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/Api/users/${id}`, config); // config is not working\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        //'Content-type':'application.json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/Api/users/profile`, user, config); // config is not working\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/Api/users`,  config); \r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const deleteUser= (userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/Api/users/${userId}`,  config); \r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//admin update\r\nexport const updateUser= (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {userLogin: { userInfo }} = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/Api/users/${user._id}`, user, config); \r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n     \r\n    });\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,  \r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\formContainer.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\testing.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\RegisterScreen.js",["202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { Col, Row,Form ,Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {  useLocation, useNavigate } from \"react-router\";\r\n\r\nconst RegisterScreen = () => {\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message,setMessage]= useState(null)\r\n  \r\n  \r\n   const navigate=useNavigate()\r\n  const location=useLocation()\r\n  const redirect=location.search?location.search.split('=')[1]:''\r\n\r\n  const userRegister=useSelector(state=>state.userRegister)\r\n  const {loading,userInfo,error}=userRegister\r\n  useEffect(()=>{\r\n      if(userInfo){\r\n          navigate(`/${redirect}`)\r\n      }\r\n  },[navigate,userInfo,redirect])\r\n\r\n  const dispatch=useDispatch()\r\n  const submitHandler=(e)=>{ \r\n    e.preventDefault()\r\n    if(password!==ConfirmPassword)\r\n    {\r\n        setMessage('Password do not match')\r\n    }\r\n    else\r\n    {\r\n        dispatch(register(name,email,password))\r\n    }\r\n          \r\n    }\r\n    \r\n  return (\r\n    <>\r\n   \r\n   <FormContainer>\r\n        <h1>SIGN UP </h1>\r\n        {(error) && <Message variant='danger'>{error}</Message>}\r\n        {(message) && <Message variant='danger'>{message}</Message>}\r\n        {/* {loading && <Loader/>} */}\r\n      <Form onSubmit={submitHandler}>\r\n      \r\n      <Form.Group  controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e)=>(setName(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group  controlId=\"email\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>(setEmail(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" minLength='5' placeholder=\"Password\" required value={password} onChange={(e)=>(setPassword(e.target.value))} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"ConfirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={ConfirmPassword} onChange={(e)=>(setConfirmPassword(e.target.value))} />\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"dark\" type=\"submit\">\r\n          REGISTER\r\n        </Button>\r\n      </Form>\r\n       <Row className=\"py-3\">\r\n           <Col>\r\n            Have An Account ?{''}<Link to={redirect?`/login?redirect=${redirect}`:`/login`}>Login</Link>\r\n           </Col>\r\n       </Row>\r\n    </FormContainer>\r\n    \r\n   </>\r\n   \r\n  )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProfileScreen.js",["204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row,Form ,Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { getUserDetails,updateUserProfile } from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {  useLocation, useNavigate } from \"react-router\";\r\nimport { listMyOrders } from \"../Actions/orderAction\";\r\n\r\n\r\nconst ProfileScreen = () => {\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message,setMessage]= useState(null)\r\n  \r\n  \r\n   const navigate=useNavigate()\r\n  const location=useLocation()\r\n  //const redirect=location.search?location.search.split('=')[1]:'/'\r\n\r\n  const userDetails=useSelector(state=>state.userDetails)\r\n  const {loading,user,error}=userDetails\r\n\r\n  const orderMyList=useSelector(state=>state.orderMyList)\r\n  const {loading:loadingOrders,orders,error:errorOrder}=orderMyList\r\n\r\n  const userLogin=useSelector(state=>state.userLogin)\r\n  const {userInfo}=userLogin\r\n\r\n  const dispatch=useDispatch()\r\n  useEffect(()=>{\r\n      if(!userInfo){\r\n          navigate(`/login`)\r\n      }\r\n      else\r\n      {\r\n          \r\n          if(!user.name){\r\n              dispatch(getUserDetails('profile'))\r\n              dispatch(listMyOrders())\r\n          }\r\n          else{\r\n              setName(user.name)\r\n              setEmail(user.email)\r\n              \r\n          }\r\n      }\r\n  },[navigate,userInfo,user,dispatch])\r\n\r\n  const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\r\n  const {success}=userUpdateProfile  \r\n\r\n  const submitHandler=(e)=>{ \r\n    e.preventDefault()\r\n    if(password!==ConfirmPassword)\r\n    {\r\n        setMessage('Password do not match')\r\n    }\r\n    else\r\n    {\r\n        dispatch(updateUserProfile({_id:user._id,name,email,password}))\r\n    }\r\n          \r\n    }\r\n  return (\r\n    <Row>\r\n        <Col md={3}>\r\n        <h2>USER PROFILE </h2>\r\n        {(error) && <Message variant='danger'>{error}</Message>}\r\n        {(message) && <Message variant='danger'>{message}</Message>}        \r\n        {(success) && <Message variant='success'><i>PROFILE UPDATED </i></Message>}\r\n        {/* {loading && <Loader/>} */}\r\n      <Form onSubmit={submitHandler}>\r\n      \r\n      <Form.Group  controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e)=>(setName(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group  controlId=\"email\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>(setEmail(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" required value={password} onChange={(e)=>(setPassword(e.target.value))} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"ConfirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={ConfirmPassword} onChange={(e)=>(setConfirmPassword(e.target.value))} />\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"dark\" type=\"submit\">\r\n          UPDATE\r\n        </Button>\r\n      </Form>\r\n        </Col >\r\n        <Col md={9}>\r\n            <h2> MY ORDERS</h2>\r\n            {loadingOrders ?<Loader/>:errorOrder?<Message variant='danger'>{errorOrder}</Message>:(\r\n              <Table stripped=\"true\" bordered responsive className='table-sm'>\r\n                 <thead>\r\n                   <tr>\r\n                     <th>ID</th>\r\n                     <th>date</th>\r\n                     <th>Total</th>\r\n                      <th>Paid</th>\r\n                      <th>Delivered</th>\r\n                      <th></th>\r\n                   </tr>\r\n                 </thead>\r\n                 <tbody>\r\n{/* unresolved undefined error */}{ orders!==undefined &&\r\n                     orders.map((order,index)=>\r\n                       <tr key={index}> \r\n                         <td>{order._id}</td>   \r\n                         <td>{order.createdAt.substring(0,10)}</td> \r\n                         <td>{order.totalPrice}</td> \r\n                         <td>{order.isPaid?order.paidAt.substring(0,10):(<i className='fas fa-times'\r\n                          style={{color:'red'}}></i>)}</td> \r\n                         <td>{order.isDelivered?order.deliveredAt.substring(0,10):(<i className='fas fa-times'\r\n                          style={{color:'red'}}></i>)}</td>      \r\n                          <td>\r\n                            <LinkContainer to={`/order/${order._id}`}>\r\n                              <Button variant='light' >Details</Button>\r\n                            </LinkContainer>\r\n                          </td>  \r\n                       </tr>\r\n                     )\r\n                   }\r\n                 </tbody>\r\n              </Table>\r\n            )}\r\n        </Col>\r\n  </Row>\r\n   \r\n  )\r\n}\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ShippingScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\checkOutComponent.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\PaymentScreen.js",["206"],"import React, { useState } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { Form, Button,Col,Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../Actions/cartAction\";\r\nimport { useNavigate } from \"react-router\";\r\nimport CheckOut from \"../components/checkOutComponent\";\r\n\r\nconst PaymentScreen = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) navigate(`/shipping`);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"RazorPay\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    navigate(`/placeorder`);\r\n  };\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <CheckOut step1 step2 step3 />\r\n        \r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          \r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"Paypal\"\r\n              onChange={(e)=>setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"RazorPay\"\r\n              id=\"RazorPay\"\r\n              name=\"paymentMethod\"\r\n              value=\"RazorPay\"\r\n              checked\r\n              onChange={(e)=>setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"dark\">\r\n            CONTINUE\r\n          </Button>\r\n        </Form>\r\n      </FormContainer> \r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["207","208","209"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Card,\r\n  Image,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrder } from \"../Actions/orderAction\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckOut from \"../components/checkOutComponent\";\r\nimport Message from \"../components/message\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, shippingAddress, paymentMethod } = cart;\r\n\r\n  cart.itemsPrice = cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.qty,0);\r\n    \r\n  cart.shippingPrice = (cart.itemsPrice > 500 ? 0 : 99).toFixed(2);\r\n  cart.taxPrice = Number((0.11 * cart.itemsPrice).toFixed(2));\r\n\r\n  cart.totalPrice =\r\n   ( Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { error, success, order } = orderCreate;\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (success) navigate(`/order/${order._id}`);\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const placeOrderHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartItems,\r\n        shippingAddress: shippingAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CheckOut step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>SHIPPING</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {shippingAddress.address},{shippingAddress.city}{\" \"}\r\n                {shippingAddress.postalCode} {shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>METHOD:</strong>\r\n                {paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order Items</h2>\r\n              {cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroupItem variant=\"flush\">\r\n                  {cartItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.price}= ₹ {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroupItem>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem>\r\n                <h2>Order Summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹{cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Taxes</Col>\r\n                  <Col>₹{cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>₹{cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"dark\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  PLACE ORDER\r\n                </Button>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Constants\\orderConstants.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Actions\\orderAction.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Reducers\\orderReducers.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\OrderScreen.js",["210","211","212"],"import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"../components/loader\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Card,\r\n  Image,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails, payOrder ,deliverOrder} from \"../Actions/orderAction\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Message from \"../components/message\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from \"../Constants/orderConstants\";\r\n\r\nconst OrderScreen =  () => {\r\n\r\n\r\n\r\n  const { id: orderId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate=useNavigate()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { error, loading, order } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const {loading:loadingPay, success:successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {loading:loadingDeliver, success:successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n   const [sdkReady,setSdkReady]=useState(false)\r\n  useEffect(() => {\r\n     if(!userInfo){\r\n       navigate(`/login`)\r\n     }\r\n\r\n    const addPayPalScript=async()=>{\r\n      const{data:clientId}=await axios.get('/Api/config/paypal')\r\n      const script=document.createElement('script')\r\n      script.type='text/javascript'\r\n      script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async=true\r\n      script.onload=()=>{\r\n        setSdkReady(true)\r\n      }\r\n     document.body.appendChild(script)\r\n\r\n    }\r\n    if(!order || successPay||successDeliver){\r\n      dispatch({type:ORDER_PAY_RESET})\r\n      dispatch({type:ORDER_DELIVER_RESET})\r\n      dispatch(getOrderDetails(orderId))\r\n    }else if(!order.isPaid) {\r\n        if(!window.paypal){\r\n          addPayPalScript()\r\n        }else{\r\n          setSdkReady(true)\r\n        }\r\n    }\r\n    }, [dispatch,orderId,successPay,order,successDeliver,navigate,userInfo]);\r\n\r\n\r\n\r\n  // console.log(order);\r\n\r\n  const successPaymentHandler=(paymentResult)=>{\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(orderId,paymentResult))\r\n  }\r\n  \r\n\r\n  \r\n\r\n     const razorPayHandler=async(amt)=>{\r\n\r\n      var raz_paymentId =''\r\n      var raz_orderId=''\r\n      var raz_signature=''\r\n           \r\n      const script=document.createElement('script')\r\n      script.type='text/javascript'\r\n      script.src=`https://checkout.razorpay.com/v1/checkout.js`\r\n      script.async=true\r\n     document.body.appendChild(script)\r\n\r\n     const razdata= await axios.post('/Api/config/razorpay')\r\n          console.log(razdata)\r\n     var options = {\r\n      \"key\": 'rzp_test_NENjtw57a4vV8I', \r\n      \"amount\": amt*100, \r\n      \r\n      \"currency\": \"INR\",\r\n      \"name\": \"Buy-Easy Inc.\",\r\n      \"description\": \"At Buy-Easy we ensure your safety over any thing\",\r\n      \"image\": \"/android-chrome-192x192.png\",\r\n      \"order_id\": `${razdata.data.id}`, \r\n      \"handler\": function async(response){\r\n           raz_paymentId=response.razorpay_payment_id\r\n           raz_orderId=response.razorpay_order_id\r\n           raz_signature=response.razorpay_signature\r\n          },\r\n      \"theme\": {\r\n          \"color\": \"#3399cc\"\r\n      }\r\n  };\r\n        \r\n  var rzp1 = new window.Razorpay(options);\r\n  rzp1.open();\r\n  // e.preventDefault();\r\n  const config={\r\n    headers:{\r\n       'Content-Type':'application/json',    \r\n    },\r\n}\r\n\r\n// actual data is not posting\r\n    const resData=await axios.put(`/Api/razorpay/${orderId}/details`,{raz_paymentId,raz_orderId,raz_signature},config)\r\n  \r\n    // console.log(resData);\r\n  }\r\n     \r\n\r\n\r\n  const deliverHandler=()=>{\r\n    \r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      {order !== undefined && (\r\n        <>\r\n          <h2>Order Id</h2>{\" \"}\r\n          <u>\r\n            <h5>{order._id}</h5>\r\n          </u>\r\n          {/*❤ error can occur*/}\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping Details</h2>\r\n                  <p>\r\n                    <strong>Name :</strong>\r\n                    {order.user.name}\r\n                  </p>\r\n                  <p>\r\n                    {\" \"}\r\n                    <strong>Email :</strong>\r\n                    <a href={`mailto:${order.user.email}`}>\r\n                      {order.user.email}\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address: </strong>\r\n                    {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                    {order.shippingAddress.postalCode}{\" \"}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message variant=\"success\">\r\n                      Delivered On {order.deliveredAt}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>METHOD:</strong>\r\n                    {order.paymentMethod}\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant=\"success\">Paid On {order.paidAt.substring(0,10)}</Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroupItem>\r\n                  <h2>Order Items</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Order is Empty</Message>\r\n                  ) : (\r\n                    <ListGroupItem variant=\"flush\">\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroupItem key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              ></Image>\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item._id}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              {item.qty} x ₹{item.price}= ₹{\" \"}\r\n                              {item.qty * item.price}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroupItem>\r\n                      ))}\r\n                    </ListGroupItem>\r\n                  )}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroupItem>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>₹{order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>₹{order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Taxes</Col>\r\n                      <Col>₹{order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Total Price</Col>\r\n                      <Col>₹{order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                  {!order.isPaid &&(\r\n                    <>\r\n                    <ListGroupItem>\r\n                      {loadingPay&&<Loader/>}\r\n                      {!sdkReady?<Loader/>:(\r\n                           <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/> \r\n                      )}                    \r\n                    </ListGroupItem>\r\n                     \r\n                    <ListGroupItem>\r\n                      <Button variant='dark' type='button' onClick={()=>razorPayHandler(order.totalPrice)}>PAY WITH RAZORPAY</Button>\r\n                    </ListGroupItem>\r\n                    \r\n                  \r\n                    </>\r\n            \r\n                     )}     \r\n                      {userInfo&&userInfo.isAdmin && order.isPaid && !order.isDelivered&&(\r\n                     <ListGroupItem>\r\n                       <Button type='button' variant='dark' className='btn btn-block' onClick={deliverHandler}>Mark as Delivered</Button>\r\n                     </ListGroupItem>\r\n                   )}             \r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\UserListScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\UserEditScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProductListScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\ProductEditScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\Screens\\OrderListScreen.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\searchBox.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\Paginate.js",["213"],"import React from 'react';\r\nimport { ListGroup, Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nconst Paginate = ({pages,page,keyword='',isAdmin=false}) => {\r\n\r\n  return (pages>1&&<Pagination variant='dark' >\r\n      {[...Array(pages).keys()].map((x,index)=>(\r\n          <LinkContainer key={index} to={!isAdmin?keyword?`/search/${keyword}/page/${x+1}`:`/page/${x+1}`:`/admin/productlist/${x+1}`}>\r\n             <Pagination.Item active={(x+1)===page}>{x+1}</Pagination.Item>\r\n          </LinkContainer>\r\n      ))}\r\n  </Pagination>)\r\n};\r\n\r\nexport default Paginate;\r\n","C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Abhishek\\Desktop\\E-Commerce\\frontend\\src\\components\\MetaTags.js",[],{"ruleId":"214","severity":1,"message":"215","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"218","replacedBy":"222"},{"ruleId":"220","replacedBy":"223"},{"ruleId":"214","severity":1,"message":"224","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":22,"column":10,"nodeType":"216","messageId":"217","endLine":22,"endColumn":17},{"ruleId":"214","severity":1,"message":"226","line":80,"column":11,"nodeType":"216","messageId":"217","endLine":80,"endColumn":17},{"ruleId":"214","severity":1,"message":"227","line":221,"column":13,"nodeType":"216","messageId":"217","endLine":221,"endColumn":17},{"ruleId":"214","severity":1,"message":"224","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":26,"column":10,"nodeType":"216","messageId":"217","endLine":26,"endColumn":17},{"ruleId":"214","severity":1,"message":"228","line":23,"column":9,"nodeType":"216","messageId":"217","endLine":23,"endColumn":17},{"ruleId":"214","severity":1,"message":"225","line":27,"column":10,"nodeType":"216","messageId":"217","endLine":27,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":3,"column":27,"nodeType":"216","messageId":"217","endLine":3,"endColumn":30},{"ruleId":"214","severity":1,"message":"230","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"231","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"232","line":4,"column":3,"nodeType":"216","messageId":"217","endLine":4,"endColumn":7},{"ruleId":"214","severity":1,"message":"232","line":4,"column":3,"nodeType":"216","messageId":"217","endLine":4,"endColumn":7},{"ruleId":"214","severity":1,"message":"233","line":37,"column":18,"nodeType":"216","messageId":"217","endLine":37,"endColumn":32},{"ruleId":"214","severity":1,"message":"234","line":128,"column":11,"nodeType":"216","messageId":"217","endLine":128,"endColumn":18},{"ruleId":"214","severity":1,"message":"235","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":19},"no-unused-vars","'ProductCarousel' is defined but never used.","Identifier","unusedVar","no-native-reassign",["236"],"no-negated-in-lhs",["237"],["236"],["237"],"'Loader' is defined but never used.","'loading' is assigned a value but never used.","'config' is assigned a value but never used.","'data' is assigned a value but never used.","'location' is assigned a value but never used.","'Row' is defined but never used.","'useState' is defined but never used.","'FormContainer' is defined but never used.","'Form' is defined but never used.","'loadingDeliver' is assigned a value but never used.","'resData' is assigned a value but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]