{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\E-Commerce\\\\frontend\\\\src\\\\Screens\\\\UserEditScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FormContainer from \"../components/formContainer\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserDetails, updateUser } from \"../Actions/userAction\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router\";\nimport { USER_UPDATE_RESET } from \"../Constants/userConstants\";\n\nconst UserEditScreen = () => {\n  const {\n    id: userId\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    user,\n    error\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate(`/admin/userlist`);\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, user, userId, successUpdate, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: `/admin/userlist`,\n    className: \"btn btn-light mv-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Edit User \"), loadingUpdate && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 35\n    }\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"isAdmin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Is Admin\",\n    checked: isAdmin,\n    onChange: e => setIsAdmin(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"UPDATE\"))));\n};\n\nexport default UserEditScreen;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Screens/UserEditScreen.js"],"names":["React","useState","useEffect","FormContainer","Form","Button","useDispatch","useSelector","Link","getUserDetails","updateUser","Message","Loader","useNavigate","useParams","USER_UPDATE_RESET","UserEditScreen","id","userId","name","setName","email","setEmail","isAdmin","setIsAdmin","navigate","dispatch","userDetails","state","loading","user","error","userUpdate","loadingUpdate","success","successUpdate","errorUpdate","type","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport {Form ,Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserDetails ,updateUser} from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router\";\r\nimport { USER_UPDATE_RESET } from \"../Constants/userConstants\";\r\n \r\nconst UserEditScreen = () => {\r\n const {id:userId}=useParams()\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  \r\n  \r\n   const navigate=useNavigate()\r\n   const dispatch=useDispatch()\r\n\r\n  const userDetails=useSelector(state=>state.userDetails)\r\n  const {loading,user,error}=userDetails\r\n\r\n  const userUpdate=useSelector(state=>state.userUpdate)\r\n  const {loading:loadingUpdate,success:successUpdate,error:errorUpdate}=userUpdate\r\n\r\n  useEffect(()=>{\r\n      if(successUpdate)\r\n      {\r\n          dispatch({type:USER_UPDATE_RESET})\r\n          navigate(`/admin/userlist`)\r\n      }\r\n      else{\r\n        if(!user.name||user._id!==userId){\r\n            dispatch(getUserDetails(userId))\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n      }\r\n      \r\n  },[dispatch,user,userId,successUpdate,navigate])\r\n\r\n  \r\n  const submitHandler=(e)=>{ \r\n    e.preventDefault() \r\n   \r\n          dispatch(updateUser({_id:userId,name,email,isAdmin}))\r\n    }\r\n    \r\n  return (\r\n    <>\r\n    <Link to={`/admin/userlist`} className='btn btn-light mv-3'>Go Back</Link>\r\n    \r\n   <FormContainer>\r\n        <h1>Edit User </h1>\r\n        {loadingUpdate&&<Loader/>}\r\n        {errorUpdate&&<Message variant='danger'>{errorUpdate}</Message>}\r\n        \r\n        {loading ?<Loader/>:error?<Message variant='danger'>{error}</Message>:(\r\n            <Form onSubmit={submitHandler}>\r\n      \r\n            <Form.Group  controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e)=>(setName(e.target.value))}/>\r\n               \r\n              </Form.Group>\r\n      \r\n              <Form.Group  controlId=\"email\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>(setEmail(e.target.value))}/>\r\n               \r\n              </Form.Group>\r\n      \r\n              <Form.Group controlId=\"isAdmin\">\r\n                <Form.Check type='checkbox' label='Is Admin'  checked={isAdmin} onChange={(e)=>(setIsAdmin(e.target.checked))} />\r\n              </Form.Group>\r\n       \r\n              \r\n              <Button variant=\"dark\" type=\"submit\">\r\n                UPDATE  \r\n              </Button>\r\n            </Form>\r\n        )} \r\n    </FormContainer>\r\n    \r\n   </>\r\n   \r\n  )\r\n}\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}