{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\E-Commerce\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useEffect}from\"react\";import FormContainer from\"../components/formContainer\";import{Form,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{Link}from\"react-router-dom\";import{getUserDetails,updateUser}from\"../Actions/userAction\";import Message from\"../components/message\";import Loader from\"../components/loader\";import{useNavigate}from\"react-router\";import{useParams}from\"react-router\";import{USER_UPDATE_RESET}from\"../Constants/userConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserEditScreen=function UserEditScreen(){var _useParams=useParams(),userId=_useParams.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var navigate=useNavigate();var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,user=userDetails.user,error=userDetails.error;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success,errorUpdate=userUpdate.error;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});navigate(\"/admin/userlist\");}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,user,userId,successUpdate,navigate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-light mv-3\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User \"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{variant:\"dark\",type:\"submit\",children:\"UPDATE\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Screens/UserEditScreen.js"],"names":["React","useState","useEffect","FormContainer","Form","Button","useDispatch","useSelector","Link","getUserDetails","updateUser","Message","Loader","useNavigate","useParams","USER_UPDATE_RESET","UserEditScreen","userId","id","name","setName","email","setEmail","isAdmin","setIsAdmin","navigate","dispatch","userDetails","state","loading","user","error","userUpdate","loadingUpdate","successUpdate","success","errorUpdate","type","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport {Form ,Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserDetails ,updateUser} from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router\";\r\nimport { USER_UPDATE_RESET } from \"../Constants/userConstants\";\r\n \r\nconst UserEditScreen = () => {\r\n const {id:userId}=useParams()\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  \r\n  \r\n   const navigate=useNavigate()\r\n   const dispatch=useDispatch()\r\n\r\n  const userDetails=useSelector(state=>state.userDetails)\r\n  const {loading,user,error}=userDetails\r\n\r\n  const userUpdate=useSelector(state=>state.userUpdate)\r\n  const {loading:loadingUpdate,success:successUpdate,error:errorUpdate}=userUpdate\r\n\r\n  useEffect(()=>{\r\n      if(successUpdate)\r\n      {\r\n          dispatch({type:USER_UPDATE_RESET})\r\n          navigate(`/admin/userlist`)\r\n      }\r\n      else{\r\n        if(!user.name||user._id!==userId){\r\n            dispatch(getUserDetails(userId))\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n      }\r\n      \r\n  },[dispatch,user,userId,successUpdate,navigate])\r\n\r\n  \r\n  const submitHandler=(e)=>{ \r\n    e.preventDefault() \r\n   \r\n          dispatch(updateUser({_id:userId,name,email,isAdmin}))\r\n    }\r\n    \r\n  return (\r\n    <>\r\n    <Link to={`/admin/userlist`} className='btn btn-light mv-3'>Go Back</Link>\r\n    \r\n   <FormContainer>\r\n        <h1>Edit User </h1>\r\n        {loadingUpdate&&<Loader/>}\r\n        {errorUpdate&&<Message variant='danger'>{errorUpdate}</Message>}\r\n        \r\n        {loading ?<Loader/>:error?<Message variant='danger'>{error}</Message>:(\r\n            <Form onSubmit={submitHandler}>\r\n      \r\n            <Form.Group  controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e)=>(setName(e.target.value))}/>\r\n               \r\n              </Form.Group>\r\n      \r\n              <Form.Group  controlId=\"email\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>(setEmail(e.target.value))}/>\r\n               \r\n              </Form.Group>\r\n      \r\n              <Form.Group controlId=\"isAdmin\">\r\n                <Form.Check type='checkbox' label='Is Admin'  checked={isAdmin} onChange={(e)=>(setIsAdmin(e.target.checked))} />\r\n              </Form.Group>\r\n       \r\n              \r\n              <Button variant=\"dark\" type=\"submit\">\r\n                UPDATE  \r\n              </Button>\r\n            </Form>\r\n        )} \r\n    </FormContainer>\r\n    \r\n   </>\r\n   \r\n  )\r\n}\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}