{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './Reducers/productReducers';\nimport { cartReducer } from './Reducers/cartReducer';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './Reducers/userReducer';\nimport { orderCreateReducer, orderDetailsReducer } from './Reducers/orderReducers';\nconst reducer = combineReducers({\n  productDetails: productDetailsReducer,\n  productList: productListReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}; // const paymentMethodFromLocalStorage=localStorage.getItem('paymentMethod')?JSON.parse(localStorage.getItem('paymentMethod')):{}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage //   paymentMethod: paymentMethodFromLocalStorage\n\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","reducer","productDetails","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,kBAA9C,EAAiEC,wBAAjE,QAAiG,wBAAjG;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAuD,0BAAvD;AAEA,MAAMC,OAAO,GAACb,eAAe,CAAC;AAC1Bc,EAAAA,cAAc,EAACT,qBADW;AAE1BU,EAAAA,WAAW,EAACX,kBAFc;AAG1BY,EAAAA,IAAI,EAAEV,WAHoB;AAI1BW,EAAAA,SAAS,EAACV,gBAJgB;AAK1BW,EAAAA,YAAY,EAACV,mBALa;AAM1BW,EAAAA,WAAW,EAACV,kBANc;AAO1BW,EAAAA,iBAAiB,EAACV,wBAPQ;AAQ1BW,EAAAA,WAAW,EAACV,kBARc;AAS1BW,EAAAA,YAAY,EAACV;AATa,CAAD,CAA7B;AAaA,MAAMW,yBAAyB,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAAjH;AAEA,MAAMG,wBAAwB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IAA7G;AAGA,MAAMI,+BAA+B,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAAwCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAxC,GAA4F,EAAlI,C,CAEA;;AAEA,MAAMK,YAAY,GAAC;AACfd,EAAAA,IAAI,EAAC;AAACe,IAAAA,SAAS,EAACR,yBAAX;AACCS,IAAAA,eAAe,EAACH,+BADjB,CAED;;AAFC,GADU;AAKfZ,EAAAA,SAAS,EAAC;AAACgB,IAAAA,QAAQ,EAACL;AAAV;AALK,CAAnB;AAOA,MAAMM,UAAU,GAAC,CAAChC,KAAD,CAAjB;AAEA,MAAMiC,KAAK,GAAEpC,WAAW,CACpBc,OADoB,EAEpBiB,YAFoB,EAGnB3B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAHA,CAAxB;AAOA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer,productDetailsReducer,} from './Reducers/productReducers'\r\nimport { cartReducer } from './Reducers/cartReducer'\r\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer } from './Reducers/userReducer'\r\nimport { orderCreateReducer ,orderDetailsReducer} from './Reducers/orderReducers'\r\n\r\nconst reducer=combineReducers({\r\n    productDetails:productDetailsReducer,\r\n    productList:productListReducer,\r\n    cart: cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer\r\n})\r\n\r\n\r\nconst cartItemsFromLocalStorage= localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromLocalStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\n\r\nconst shippingAddressFromLocalStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\n// const paymentMethodFromLocalStorage=localStorage.getItem('paymentMethod')?JSON.parse(localStorage.getItem('paymentMethod')):{}\r\n\r\nconst initialState={\r\n    cart:{cartItems:cartItemsFromLocalStorage,\r\n          shippingAddress:shippingAddressFromLocalStorage,\r\n        //   paymentMethod: paymentMethodFromLocalStorage\r\n    },\r\n    userLogin:{userInfo:userInfoFromLocalStorage}\r\n}  \r\nconst middleware=[thunk]\r\n\r\nconst store= createStore(\r\n    reducer,\r\n    initialState,\r\n     composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}