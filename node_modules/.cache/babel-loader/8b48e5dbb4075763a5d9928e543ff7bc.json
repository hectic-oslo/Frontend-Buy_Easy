{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\E-Commerce\\\\frontend\\\\src\\\\Screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { useNavigate } from \"react-router\";\nimport { listOrders } from \"../Actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderListScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      navigate(`/login`);\n    }\n  }, [dispatch, navigate, userInfo]);\n  console.log(orders);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      stripped: true,\n      bordered: true,\n      hover: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user && order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isDelevered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/admin/orders/${order._id}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderListScreen, \"HkMBPBT8krJTeOBB8rn3KnXkW7w=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = OrderListScreen;\nexport default OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Screens/OrderListScreen.js"],"names":["React","useEffect","Button","Table","useDispatch","useSelector","LinkContainer","Message","Loader","useNavigate","listOrders","OrderListScreen","dispatch","navigate","userLogin","state","userInfo","orderList","loading","error","orders","isAdmin","console","log","map","order","index","_id","user","name","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelevered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { listOrders } from \"../Actions/orderAction\";\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate=useNavigate()\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  useEffect(() => {\r\n    if(userInfo&&userInfo.isAdmin){\r\n      dispatch(listOrders());\r\n    }else{\r\n      navigate(`/login`)\r\n    }\r\n  }, [dispatch,navigate,userInfo]);\r\n  \r\n\r\n  console.log(orders)\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table responsive stripped bordered hover className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>User</th>\r\n              <th>Date</th>\r\n              <th>Price</th>\r\n              <th>Paid</th>\r\n              <th>Delivered</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, index) => (\r\n              <tr key={index}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user&&order.user.name}</td>\r\n                <td>{order.createdAt.substring(0,10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid? (\r\n                    order.paidAt.substring(0,10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelevered ? (\r\n                   order.deliveredAt.substring(0,10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/orders/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  \r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n"]},"metadata":{},"sourceType":"module"}