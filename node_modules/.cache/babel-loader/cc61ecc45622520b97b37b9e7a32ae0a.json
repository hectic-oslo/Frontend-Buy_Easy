{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\E-Commerce\\\\frontend\\\\src\\\\Screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FormContainer from \"../components/formContainer\";\nimport { Col, Row, Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserDetails, updateUserProfile } from \"../Actions/userAction\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { orderMyList } from \"../Actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation(); //const redirect=location.search?location.search.split('=')[1]:'/'\n\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    user,\n    error\n  } = userDetails;\n  const orderMyList = useSelector(state => state.orderMyList);\n  const {\n    loading: loadingOrders,\n    orders,\n    error: errorOrder\n  } = orderMyList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(`/login`);\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(orderMyList());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [navigate, userInfo, user, dispatch]);\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== ConfirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        _id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"USER PROFILE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"PROFILE UPDATED \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"Password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"ConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: ConfirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" MY ORDERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileScreen, \"4bbMJGCpkzxDiqZqOpd8bXXtW/k=\", false, function () {\n  return [useNavigate, useLocation, useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Screens/ProfileScreen.js"],"names":["React","useState","useEffect","FormContainer","Col","Row","Form","Button","useDispatch","useSelector","Link","getUserDetails","updateUserProfile","Message","Loader","useLocation","useNavigate","orderMyList","ProfileScreen","name","setName","email","setEmail","password","setPassword","ConfirmPassword","setConfirmPassword","message","setMessage","navigate","location","userDetails","state","loading","user","error","loadingOrders","orders","errorOrder","userLogin","userInfo","dispatch","userUpdateProfile","success","submitHandler","e","preventDefault","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { Col, Row,Form ,Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserDetails,updateUserProfile } from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {  useLocation, useNavigate } from \"react-router\";\r\nimport { orderMyList } from \"../Actions/orderAction\";\r\n\r\nconst ProfileScreen = () => {\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message,setMessage]= useState(null)\r\n  \r\n  \r\n   const navigate=useNavigate()\r\n  const location=useLocation()\r\n  //const redirect=location.search?location.search.split('=')[1]:'/'\r\n\r\n  const userDetails=useSelector(state=>state.userDetails)\r\n  const {loading,user,error}=userDetails\r\n\r\n  const orderMyList=useSelector(state=>state.orderMyList)\r\n  const {loading:loadingOrders,orders,error:errorOrder}=orderMyList\r\n\r\n  const userLogin=useSelector(state=>state.userLogin)\r\n  const {userInfo}=userLogin\r\n\r\n  const dispatch=useDispatch()\r\n  useEffect(()=>{\r\n      if(!userInfo){\r\n          navigate(`/login`)\r\n      }\r\n      else\r\n      {\r\n          \r\n          if(!user.name){\r\n              dispatch(getUserDetails('profile'))\r\n              dispatch(orderMyList())\r\n          }\r\n          else{\r\n              setName(user.name)\r\n              setEmail(user.email)\r\n              \r\n          }\r\n      }\r\n  },[navigate,userInfo,user,dispatch])\r\n\r\n  const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\r\n  const {success}=userUpdateProfile  \r\n\r\n  const submitHandler=(e)=>{ \r\n    e.preventDefault()\r\n    if(password!==ConfirmPassword)\r\n    {\r\n        setMessage('Password do not match')\r\n    }\r\n    else\r\n    {\r\n        dispatch(updateUserProfile({_id:user._id,name,email,password}))\r\n    }\r\n          \r\n    }\r\n    \r\n  return (\r\n    <Row>\r\n        <Col md={3}>\r\n        <h2>USER PROFILE </h2>\r\n        {(error) && <Message variant='danger'>{error}</Message>}\r\n        {(message) && <Message variant='danger'>{message}</Message>}        \r\n        {(success) && <Message variant='success'><i>PROFILE UPDATED </i></Message>}\r\n        {/* {loading && <Loader/>} */}\r\n      <Form onSubmit={submitHandler}>\r\n      \r\n      <Form.Group  controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e)=>(setName(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group  controlId=\"email\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>(setEmail(e.target.value))}/>\r\n         \r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>(setPassword(e.target.value))} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"ConfirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={ConfirmPassword} onChange={(e)=>(setConfirmPassword(e.target.value))} />\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"dark\" type=\"submit\">\r\n          UPDATE\r\n        </Button>\r\n      </Form>\r\n        </Col >\r\n        <Col md={9}>\r\n            <h2> MY ORDERS</h2>\r\n        </Col>\r\n  </Row>\r\n   \r\n  )\r\n}\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}