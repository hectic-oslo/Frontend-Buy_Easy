{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\E-Commerce\\\\frontend\\\\src\\\\Screens\\\\ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FormContainer from \"../components/formContainer\";\nimport { Col, Row, Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { login } from \"../Actions/userAction\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = () => {\n  _s();\n\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    alert(`ok`);\n    console.log('submit');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SHIPPING DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter address\",\n            value: address,\n            required: true,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter city name\",\n            value: city,\n            required: true,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Postal Code\",\n            value: postalCode,\n            required: true,\n            onChange: e => setPostalCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter country name\",\n            value: country,\n            required: true,\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"CONTINUE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(ShippingScreen, \"7t1c1Co8PSKeuCcPEe6vv9LiymQ=\");\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Screens/ShippingScreen.js"],"names":["React","useState","useEffect","FormContainer","Col","Row","Form","Button","useDispatch","useSelector","Link","login","Message","Loader","useLocation","useNavigate","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","alert","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAsC,iBAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAUC,WAAV,EAAuBC,WAAvB,QAA0C,cAA1C;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBjB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACkB,IAAD,EAAMC,OAAN,IAAenB,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACoB,UAAD,EAAYC,aAAZ,IAA2BrB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACsB,OAAD,EAASC,UAAT,IAAqBvB,QAAQ,CAAC,EAAD,CAAnC;;AAIA,QAAMwB,aAAa,GAAEC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAE,IAAF,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAJD;;AAKF,sBAAO;AAAA,2BACF,QAAC,aAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEL,aAAhB;AAAA,gCAEH,QAAC,IAAD,CAAM,KAAN;AAAa,UAAA,SAAS,EAAC,SAAvB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,eAAtC;AAAsD,YAAA,KAAK,EAAER,OAA7D;AAAsE,YAAA,QAAQ,MAA9E;AAA+E,YAAA,QAAQ,EAAGS,CAAD,IAAMR,UAAU,CAACQ,CAAC,CAACK,MAAF,CAASC,KAAV;AAAzG;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG,eAOF,QAAC,IAAD,CAAM,KAAN;AAAa,UAAA,SAAS,EAAC,MAAvB;AAAA,kCACC,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,iBAAtC;AAAwD,YAAA,KAAK,EAAEb,IAA/D;AAAqE,YAAA,QAAQ,MAA7E;AAA8E,YAAA,QAAQ,EAAGO,CAAD,IAAMN,OAAO,CAACM,CAAC,CAACK,MAAF,CAASC,KAAV;AAArG;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPE,eAYH,QAAC,IAAD,CAAM,KAAN;AAAa,UAAA,SAAS,EAAC,YAAvB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,mBAAtC;AAA0D,YAAA,KAAK,EAAEX,UAAjE;AAA6E,YAAA,QAAQ,MAArF;AAAsF,YAAA,QAAQ,EAAGK,CAAD,IAAMJ,aAAa,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV;AAAnH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZG,eAiBH,QAAC,IAAD,CAAM,KAAN;AAAa,UAAA,SAAS,EAAC,SAAvB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,oBAAtC;AAA2D,YAAA,KAAK,EAAET,OAAlE;AAA2E,YAAA,QAAQ,MAAnF;AAAoF,YAAA,QAAQ,EAAGG,CAAD,IAAMF,UAAU,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV;AAA9G;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBG,eAsBH,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBG;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADE,mBAAP;AA+BD,CA5CD;;GAAMhB,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { Col, Row,Form ,Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../Actions/userAction\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport {  useLocation, useNavigate } from \"react-router\";\r\n\r\nconst ShippingScreen = () => {\r\n    const [address,setAddress]=useState('')\r\n    const [city,setCity]=useState('')\r\n    const [postalCode,setPostalCode]=useState('')\r\n    const [country,setCountry]=useState('')\r\n\r\n\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        alert(`ok`)\r\n        console.log('submit');\r\n    }\r\n  return <>\r\n       <FormContainer>\r\n           <h1>SHIPPING DETAILS</h1>\r\n           <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group  controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter address\" value={address} required onChange={(e)=>(setAddress(e.target.value))}/>        \r\n        </Form.Group>\r\n\r\n         <Form.Group  controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter city name\" value={city} required onChange={(e)=>(setCity(e.target.value))}/>        \r\n        </Form.Group>\r\n         \r\n        <Form.Group  controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Postal Code\" value={postalCode} required onChange={(e)=>(setPostalCode(e.target.value))}/>        \r\n        </Form.Group>\r\n\r\n        <Form.Group  controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter country name\" value={country} required onChange={(e)=>(setCountry(e.target.value))}/>        \r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>CONTINUE</Button>\r\n\r\n        </Form>\r\n\r\n       </FormContainer>\r\n  </>;\r\n};\r\n\r\nexport default ShippingScreen;\r\n"]},"metadata":{},"sourceType":"module"}