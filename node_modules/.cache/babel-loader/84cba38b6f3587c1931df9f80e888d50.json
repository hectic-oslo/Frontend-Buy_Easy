{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\E-Commerce\\\\frontend\\\\src\\\\Screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Loader from \"../components/loader\";\nimport { Form, Button, Row, Card, Image, Col, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrderDetails } from \"../Actions/orderAction\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Message from \"../components/message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const orderId = id;\n  console.log('1');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getOrderDetails(orderId));\n  }, [dispatch, getOrderDetails]);\n  console.log('2');\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    loading,\n    order,\n    error\n  } = orderDetails;\n  console.log(order);\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 18\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 34\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderScreen, \"XDWAJu8jbTEIv9hpo8/vr7X3O9g=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Screens/OrderScreen.js"],"names":["React","useState","useEffect","Loader","Form","Button","Row","Card","Image","Col","ListGroup","ListGroupItem","useDispatch","useSelector","getOrderDetails","Link","useParams","Message","OrderScreen","id","orderId","console","log","dispatch","orderDetails","state","loading","order","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,GANF,EAOEC,SAPF,EAQEC,aARF,QASO,iBATP;AAUA,SAASC,WAAT,EAAsBC,WAAtB,QAA0C,aAA1C;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,IAAT,EAAcC,SAAd,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAGtB,QAAM;AAACC,IAAAA;AAAD,MAAKH,SAAS,EAApB;AACA,QAAMI,OAAO,GAACD,EAAd;AAGFE,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAV,EAAAA,SAAS,CAAC,MAAM;AACfqB,IAAAA,QAAQ,CAACT,eAAe,CAACM,OAAD,CAAhB,CAAR;AACA,GAFQ,EAEP,CAACG,QAAD,EAAUT,eAAV,CAFO,CAAT;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,QAAME,YAAY,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAGE,IAAAA,OAAH;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAA4BJ,YAAlC;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AAEA,SAAOD,OAAO,gBAAC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAD,GAAWE,KAAK,gBAAC,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA,cAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAD,gBAC5B;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA6FD,CA9GD;;GAAMV,W;UAGSF,S,EAKIJ,W,EAKIC,W;;;KAbjBK,W;AAgHN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"../components/loader\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Card,\r\n  Image,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector, } from \"react-redux\";\r\nimport { getOrderDetails } from \"../Actions/orderAction\";\r\nimport { Link,useParams } from \"react-router-dom\";\r\nimport Message from \"../components/message\";\r\n\r\nconst OrderScreen = () => {\r\n\r\n\r\n    const {id}=useParams()\r\n    const orderId=id\r\n  \r\n\r\n  console.log('1');\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n   dispatch(getOrderDetails(orderId))\r\n  },[dispatch,getOrderDetails]);\r\n  console.log('2');\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const {  loading, order ,error} = orderDetails;\r\n  console.log(order);\r\n \r\n  return loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:\r\n    <p> \r\n    <h1>Order </h1>\r\n    {/* <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>SHIPPING</h2>  \r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode} {order.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>METHOD:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroupItem variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.price}= ₹ {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroupItem>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem>\r\n                <h2>Order Summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹{order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Taxes</Col>\r\n                  <Col>₹{order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>₹{order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n                        \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row> */}\r\n    </p>\r\n};\r\n\r\nexport default OrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}