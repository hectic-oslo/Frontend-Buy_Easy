{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../Constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application.json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/Api/users/login', {\n      email,\n      password\n    }); // config is not working\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application.json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/Api/users', {\n      name,\n      email,\n      password\n    }); // config is not working\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application.json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/Api/users/${id}`, config); // config is not working\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application.json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/Api/users/profile`, user, config); // config is not working\n\n    console.log(data);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/Actions/userAction.js"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","console","log"],"mappings":"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","sourcesContent":["import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../Constants/userConstants\";\r\nimport axios from  \"axios\";\r\n\r\nexport const login= (email,password)=>async (dispatch)=>{\r\n     try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application.json',    \r\n            },\r\n        }\r\n        const {data}=await axios.post('/Api/users/login',{email,password})  // config is not working\r\n       \r\n  \r\n        dispatch({\r\n          type:USER_LOGIN_SUCCESS,\r\n          payload:data\r\n      })\r\n\r\n      localStorage.setItem('userInfo',JSON.stringify(data))\r\n     }\r\n     catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response &&error.response.data.message?error.response.data.message:error.message,\r\n        })\r\n     }\r\n}\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type:USER_LOGOUT\r\n    })\r\n}\r\n\r\n\r\nexport const register= (name,email,password)=>async (dispatch)=>{\r\n    try{\r\n       dispatch({\r\n           type:USER_REGISTER_REQUEST\r\n       })\r\n       const config={\r\n           headers:{\r\n               'Content-type':'application.json',    \r\n           },\r\n       }\r\n       const {data}=await axios.post('/Api/users',{name,email,password})  // config is not working\r\n      \r\n \r\n       dispatch({\r\n         type:USER_REGISTER_SUCCESS,\r\n         payload:data\r\n     })\r\n\r\n     dispatch({\r\n        type:USER_LOGIN_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n     localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n       dispatch({\r\n           type:USER_REGISTER_FAIL,\r\n           payload:error.response &&error.response.data.message?error.response.data.message:error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails= (id)=>async (dispatch,getState)=>{\r\n    try{\r\n       dispatch({\r\n           type:USER_DETAILS_REQUEST\r\n       })\r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n       const config={\r\n           headers:{\r\n               'Content-type':'application.json',  \r\n               Authorization:`Bearer ${userInfo.token}`  \r\n           },\r\n       }\r\n       const {data}=await axios.get(`/Api/users/${id}`,config)  // config is not working\r\n      \r\n \r\n       dispatch({\r\n         type:USER_DETAILS_SUCCESS,\r\n         payload:data\r\n     })\r\n\r\n    \r\n    }\r\n    catch(error){\r\n       dispatch({\r\n           type:USER_DETAILS_FAIL,\r\n           payload:error.response &&error.response.data.message?error.response.data.message:error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile= (user)=>async (dispatch,getState)=>{\r\n    try{\r\n       dispatch({\r\n           type:USER_UPDATE_PROFILE_REQUEST\r\n       })\r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n       const config={\r\n           headers:{\r\n               'Content-type':'application.json',  \r\n               Authorization:`Bearer ${userInfo.token}`  \r\n           },\r\n       }\r\n       const {data}=await axios.put(`/Api/users/profile`,user,config)  // config is not working\r\n      \r\n        console.log(data);\r\n       dispatch({\r\n         type:USER_UPDATE_PROFILE_SUCCESS,\r\n         payload:data\r\n     })\r\n\r\n    \r\n    }\r\n    catch(error){\r\n       dispatch({\r\n           type:USER_UPDATE_PROFILE_FAIL,\r\n           payload:error.response &&error.response.data.message?error.response.data.message:error.message,\r\n       })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}