{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './Reducers/productReducers';\nimport { cartReducer } from './Reducers/cartReducer';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer } from './Reducers/userReducer';\nimport { orderCreateReducer, orderDetailsReducer, orderMyListReducer, orderPayReducer } from './Reducers/orderReducers';\nconst reducer = combineReducers({\n  productDetails: productDetailsReducer,\n  productList: productListReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderMyListReducer,\n  userList: userListReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage,\n    paymentMethod: paymentMethodFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/E-Commerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","orderCreateReducer","orderDetailsReducer","orderMyListReducer","orderPayReducer","reducer","productDetails","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderMyList","userList","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","paymentMethodFromLocalStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,kBAA9C,EAAiEC,wBAAjE,EAA2FC,eAA3F,QAAkH,wBAAlH;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAiDC,kBAAjD,EAAoEC,eAApE,QAA0F,0BAA1F;AAEA,MAAMC,OAAO,GAAChB,eAAe,CAAC;AAC1BiB,EAAAA,cAAc,EAACZ,qBADW;AAE1Ba,EAAAA,WAAW,EAACd,kBAFc;AAG1Be,EAAAA,IAAI,EAACb,WAHqB;AAI1Bc,EAAAA,SAAS,EAACb,gBAJgB;AAK1Bc,EAAAA,YAAY,EAACb,mBALa;AAM1Bc,EAAAA,WAAW,EAACb,kBANc;AAO1Bc,EAAAA,iBAAiB,EAACb,wBAPQ;AAQ1Bc,EAAAA,WAAW,EAACZ,kBARc;AAS1Ba,EAAAA,YAAY,EAACZ,mBATa;AAU1Ba,EAAAA,QAAQ,EAACX,eAViB;AAW1BY,EAAAA,WAAW,EAACb,kBAXc;AAY1Bc,EAAAA,QAAQ,EAACjB;AAZiB,CAAD,CAA7B;AAgBA,MAAMkB,yBAAyB,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAAjH;AAEA,MAAMG,wBAAwB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IAA7G;AAGA,MAAMI,+BAA+B,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAAwCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAxC,GAA4F,EAAlI;AAEA,MAAMK,6BAA6B,GAACN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAtC,GAAwF,EAA5H;AAEA,MAAMM,YAAY,GAAC;AACflB,EAAAA,IAAI,EAAC;AAACmB,IAAAA,SAAS,EAACT,yBAAX;AACCU,IAAAA,eAAe,EAACJ,+BADjB;AAECK,IAAAA,aAAa,EAAEJ;AAFhB,GADU;AAKfhB,EAAAA,SAAS,EAAC;AAACqB,IAAAA,QAAQ,EAACP;AAAV;AALK,CAAnB;AAOA,MAAMQ,UAAU,GAAC,CAACxC,KAAD,CAAjB;AAEA,MAAMyC,KAAK,GAAE5C,WAAW,CACpBiB,OADoB,EAEpBqB,YAFoB,EAGnBlC,mBAAmB,CAACF,eAAe,CAAC,GAAGyC,UAAJ,CAAhB,CAHA,CAAxB;AAOA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer,productDetailsReducer,} from './Reducers/productReducers'\r\nimport { cartReducer } from './Reducers/cartReducer'\r\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer, userListReducer } from './Reducers/userReducer'\r\nimport { orderCreateReducer ,orderDetailsReducer,orderMyListReducer,orderPayReducer} from './Reducers/orderReducers'\r\n\r\nconst reducer=combineReducers({\r\n    productDetails:productDetailsReducer,\r\n    productList:productListReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderMyList:orderMyListReducer,\r\n    userList:userListReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromLocalStorage= localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromLocalStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\n\r\nconst shippingAddressFromLocalStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst paymentMethodFromLocalStorage=localStorage.getItem('paymentMethod')?JSON.parse(localStorage.getItem('paymentMethod')):{}\r\n\r\nconst initialState={\r\n    cart:{cartItems:cartItemsFromLocalStorage,\r\n          shippingAddress:shippingAddressFromLocalStorage,\r\n          paymentMethod: paymentMethodFromLocalStorage\r\n    },\r\n    userLogin:{userInfo:userInfoFromLocalStorage}\r\n}  \r\nconst middleware=[thunk]\r\n\r\nconst store= createStore(\r\n    reducer,\r\n    initialState,\r\n     composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}